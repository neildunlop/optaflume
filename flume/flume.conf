#simple config to take input from a source, buffer it in-memory and pass it to a sink

docker.sinks = logSink kafkaSink
docker.sources = netcatSource
docker.channels = inMemoryChannel1 inMemoryChannel2

#configure the in-memory buffer between the source and the log sink
docker.channels.inMemoryChannel1.type = memory
docker.channels.inMemoryChannel1.capacity = 1000
docker.channels.inMemoryChannel1.transactionCapacity = 100

#configure the in-memory buffer between the source and the kafka sink
docker.channels.inMemoryChannel2.type = memory
docker.channels.inMemoryChannel2.capacity = 1000
docker.channels.inMemoryChannel2.transactionCapacity = 100

#configure basic logger to show what we have processed
docker.sinks.logSink.type = logger
docker.sinks.logSink.channel = inMemoryChannel2

#configure the kafka sink
docker.sinks.kafkaSink.channel = inMemoryChannel1
docker.sinks.kafkaSink.type = org.apache.flume.sink.kafka.KafkaSink
docker.sinks.kafkaSink.kafka.topic = test
docker.sinks.kafkaSink.kafka.bootstrap.servers = middle:9092
#docker.sinks.kafkaSink.kafka.bootstrap.servers = optaflume_middle_1:9092
docker.sinks.kafkaSink.kafka.flumeBatchSize = 20
docker.sinks.kafkaSink.kafka.producer.acks = 1
docker.sinks.kafkaSink.kafka.producer.linger.ms = 1
#docker.sinks.kafkaSink.kafka.producer.compression.type = snappy


#configure the netcatSource so we can accept input from the commandline
docker.sources.netcatSource.type = netcat
docker.sources.netcatSource.bind = 0.0.0.0
docker.sources.netcatSource.port = 44444
docker.sources.netcatSource.channels = inMemoryChannel1 inMemoryChannel2
